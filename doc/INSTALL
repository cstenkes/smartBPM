		Brevissimus Co. Smart BPM v @@@app.version@@@
			Zip based distribution.

You only need to do:

Using the project as user:
--------------------------
1. Unzip smart-x.y.z.zip.
2. Install jdk 1.6 with java DB.
4. Install a web container like Apache Tomcat.
5. Configure build.properties depending on database settings.
6. Configure Tomcat 6.x or above to use the web directory for the application.
7. Start java DB
8. To create db user run 
	ant create_db
	
9. To create tables run 
	ant create_db2
	
10. To create default data run 
	ant create_db3

11. Start web container.
12. Deploy smart-x.y.z.war to the application server.
13. Browse a next url (in case of Tomcat): http://localhost:8080/smartBpm_console_x.y/
14. Login as guest/guest
15. Enjoy the project!



Source and building:
--------------------
0. Install jdk 1.6.x on your computer
1. Install Apache Ant 1.7.1

2. To create db user run 
	ant create_db
	
3. To create tables run 
	ant create_db2
	
4. To create default data run 
	ant create_db3
	
5. To see how the unittests works run 
	ant test

6. To create a distribution (.war) run 
	ant dist
7. Run application server.
8. Deploy smart-x.y.z.war to the application server.
9. Browse a next url (in case of Tomcat): http://localhost:8080/smartBpm_console_x.y/
10. Login as guest/guest
11. Enjoy the project!

Using project as bundle:
------------------------
You can download a preinstalled and preconfigured project bundle from...


Directory Structures:
---------------------
/bin: class files
/src: source code of the application
/doc: documentation
/conf: configuration files for hibernate, log4j
/lib: libraries of tools
/db: database scripts to Java DB, some of them are autogenerated 
/web: web files for the client

Web Directory Structures:
-------------------------

Dirs:                       Description:
-----                       ------------
/web                        web client directory
/web/WEB-INF
           +-- tiles.xml 
           +-- web.xml 
/web/WEB-INF/lib            all needed libs to the application
/web/WEB-INF/classes        all compiled classes
/web/pages                  all the jsp pages
/web/layouts                jsp templates used by tiles
/web/doc                    all the documentation that is accessible 
                            from the client
/web/img, /web/css          static html elements
